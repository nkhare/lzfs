# The following block is used to allow the source RPM to be rebuilt 
# against specific kernels.  It is preferable that rpmbuild define the
# require_kver, require_kdir, require_obj constants for us, but if it does not
# not we attempt to determine the correct values based on your distro.

# kdir:    Full path to the kernel source headers
# kobj:    Full path to the kernel build objects
# kver:    Kernel version
# kpkg:    Kernel package name
# kdevpkg: Kernel devel package name
# kverpkg: Kernel package version

%if %{defined require_kver}
%define kver %{require_kver}
%endif

%if %{defined require_kdir}
%define kdir %{require_kdir}
%endif

%if %{defined require_kobj}
%define kobj %{require_kobj}
%endif

# SLES:
%if %{defined suse_version}
 %if %{undefined kver}
  %ifarch ppc64
   %define kverextra     ppc64
  %else
   %define kverextra     default
  %endif

  %if %{suse_version} >= 1100
   %define klnk          %{_usrsrc}/linux-obj/%{_target_cpu}/%{kverextra}
   %define krelease      %{klnk}/include/config/kernel.release
  %else
   %define klnk          %{_usrsrc}/linux-obj/%{_target_cpu}/%{kverextra}
   %define krelease      %{klnk}/.kernelrelease
  %endif

  %define kver           %((echo X; %{__cat} %{krelease} 2>/dev/null)|tail -1)
 %endif

 %if %{undefined kverextra}
  %define kverextra      %(echo %{kver} | cut -f3 -d'-')
 %endif

 %define kpkg            kernel-%{kverextra}
 %define kdevpkg         kernel-source
 %define kverpkg         %(echo %{kver} | %{__sed} -e 's/-%{kverextra}//g')

 # The kernel and rpm versions do not strictly match under SLES11
 # e.g. kernel version 2.6.27.19-5 != rpm version 2.6.27.19-5.1
 %if %{suse_version} >= 1100
  %define koppkg         >=
 %else
  %define koppkg         =
 %endif

 %if %{undefined kdir}
  %define kdir           %{_usrsrc}/linux-%{kverpkg}
 %endif
 %if %{undefined kobj}
  %define kobj           %{kdir}-obj/%{_target_cpu}/%{kverextra}
 %endif
%else

# CHAOS 4.x/5.x:
%if %{defined ch4} || %{defined ch5}
 %if %{undefined kver}
  %define klnk           %{_usrsrc}/kernels/*/include/config
  %define kver           %((echo X; %{__cat} %{klnk}/kernel.release
                            2>/dev/null) | tail -1)
 %endif
 %define kpkg            chaos-kernel
 %define kdevpkg         chaos-kernel-devel
 %define kverpkg         %{kver}
 %define koppkg          =
 %if %{undefined kdir}
  %define kdir %{_usrsrc}/kernels/%{kver}
 %endif
 %if %{undefined kobj}
  %define kobj           %{kdir}
 %endif
%else

# RHEL 5.x/6.x:
%if %{defined el5} || %{defined el6}
 %if %{undefined kver}
  %define klnk           %{_usrsrc}/kernels/*/include/config
  %define kver           %((echo X; %{__cat} %{klnk}/kernel.release
                            2>/dev/null) | tail -1)
 %endif
 %define kpkg            kernel
 %define kdevpkg         kernel-devel
 %if %{defined el6}
  %define kverpkg        %(echo %{kver} | %{__sed} -e 's/.%{_target_cpu}//g')
 %else
  %define kverpkg        %{kver}
 %endif
 %define koppkg          =
 %if %{undefined kdir}
  %define kdir           %{_usrsrc}/kernels/%{kver}-%{_target_cpu}
 %endif
 %if %{undefined kobj}
  %define kobj           %{kdir}
 %endif
%else

# Fedora:
%if %{defined fedora}
 %if %{undefined kver}
  %define klnk           %{_usrsrc}/kernels/*/include/config
  %define kver           %((echo X; %{__cat} %{klnk}/kernel.release
                            2>/dev/null) | tail -1)
 %endif
 %define kpkg            kernel
 %define kdevpkg         kernel-devel
 %define kverpkg         %(echo %{kver} | %{__sed} -e 's/.%{_target_cpu}//g')
 %define koppkg          =
 %if %{undefined kdir}
  %define kdir           %{_usrsrc}/kernels/%{kver}
 %endif
 %if %{undefined kobj}
  %define kobj           %{kdir}
 %endif
%else

# Unsupported distro:
 %if %{undefined kver}
  %define kver           %(uname -r)
 %endif
 %define kverpkg         %{kver}
 %if %{undefined kdir}
  %define kdir           /lib/modules/%{kver}/build
 %endif
 %if %{undefined kobj}
  %define kobj           %{kdir}
 %endif

%endif
%endif
%endif
%endif

%define name             @PACKAGE@
%define version          @VERSION@
%if %{defined build_src_rpm}
%define release 	 1
%define requires         %{kpkg}
%define devel_requires   %{kdevpkg}
%else
%define relext           %(echo %{kverpkg} | %{__sed} -e 's/-/_/g')
%define release          @LZFS_META_RELEASE@_%{relext}
%define requires         %{kpkg} %{koppkg} %{kverpkg}
%define devel_requires   %{kdevpkg} %{koppkg} %{kverpkg}
%define debug_package    %{nil}
%endif


%if %{defined require_spldir}
%define spldir %{require_spldir}
%endif

%if %{defined require_zfsdir}
%define zfsdir %{require_zfsdir}
%endif


Summary:         LZFS 
Group:           Utilities/System
Name:            %{name}
Version:         %{version}
Release:         %{release}
License:         GPL
URL:             KQ
BuildRoot:       %{_tmppath}/%{name}-%{version}-%{release}-%(%{__id} -un)
Source:          %{name}-%{version}.tar.gz
Requires:        %{requires}


%description
The %{name} package contains POSIX porting layer to zfs file system.


%prep
%setup
%build
%configure --with-linux=%{kdir} --with-linux-obj=%{kobj} \
 		 --with-spl=%{spldir} --with-zfs=%{zfsdir} 
make

%install
rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-, root, root)
/lib/modules/*
%{_prefix}/src/* 
%attr(0755,root,root) %{_sysconfdir}/init.d/zfsload

%post
if [ -f /boot/System.map-%{kver} ]; then
	depmod -ae -F /boot/System.map-%{kver} %{kver} || exit 0
else
	depmod -ae %{kver} || exit 0
fi
/sbin/chkconfig --add  zfsload


%postun
if [ -f /boot/System.map-%{kver} ]; then
	depmod -ae -F /boot/System.map-%{kver} %{kver} || exit 0
else
	depmod -ae %{kver} || exit 0
fi
